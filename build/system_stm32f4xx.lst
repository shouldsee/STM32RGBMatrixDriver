ARM GAS  /tmp/ccJIue9b.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"system_stm32f4xx.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.SetSysClock,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	SetSysClock:
  26              	.LFB125:
  27              		.file 1 "src/system_stm32f4xx.c"
   1:src/system_stm32f4xx.c **** /**
   2:src/system_stm32f4xx.c ****   ******************************************************************************
   3:src/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:src/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:src/system_stm32f4xx.c ****   * @version V1.1.0
   6:src/system_stm32f4xx.c ****   * @date    21-November-2014
   7:src/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:src/system_stm32f4xx.c ****   *          This file contains the system clock configuration for STM32F4xx devices,
   9:src/system_stm32f4xx.c ****   *          and is generated by the clock configuration tool
  10:src/system_stm32f4xx.c ****   *          stm32f4xx_Clock_Configuration_V1.1.0.xls
  11:src/system_stm32f4xx.c ****   *             
  12:src/system_stm32f4xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  13:src/system_stm32f4xx.c ****   *     user application:
  14:src/system_stm32f4xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:src/system_stm32f4xx.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:src/system_stm32f4xx.c ****   *                      depending on the configuration made in the clock xls tool. 
  17:src/system_stm32f4xx.c ****   *                      This function is called at startup just after reset and 
  18:src/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  19:src/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  20:src/system_stm32f4xx.c ****   *
  21:src/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:src/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  23:src/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  24:src/system_stm32f4xx.c ****   *                                     
  25:src/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:src/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  27:src/system_stm32f4xx.c ****   *                                 during program execution.
  28:src/system_stm32f4xx.c ****   *
  29:src/system_stm32f4xx.c ****   * 2. After each device reset the HSI (16 MHz) is used as system clock source.
  30:src/system_stm32f4xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f4xx.s" file, to
  31:src/system_stm32f4xx.c ****   *    configure the system clock before to branch to main program.
ARM GAS  /tmp/ccJIue9b.s 			page 2


  32:src/system_stm32f4xx.c ****   *
  33:src/system_stm32f4xx.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:src/system_stm32f4xx.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  35:src/system_stm32f4xx.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  36:src/system_stm32f4xx.c ****   *
  37:src/system_stm32f4xx.c ****   * 4. The default value of HSE crystal is set to 25MHz, refer to "HSE_VALUE" define
  38:src/system_stm32f4xx.c ****   *    in "stm32f4xx.h" file. When HSE is used as system clock source, directly or
  39:src/system_stm32f4xx.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:src/system_stm32f4xx.c ****   *    value to your own configuration.
  41:src/system_stm32f4xx.c ****   *
  42:src/system_stm32f4xx.c ****   * 5. This file configures the system clock as follows:
  43:src/system_stm32f4xx.c ****   *=============================================================================
  44:src/system_stm32f4xx.c ****   *=============================================================================
  45:src/system_stm32f4xx.c ****   *        Supported STM32F40xx/41xx/427x/437x devices
  46:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  47:src/system_stm32f4xx.c ****   *        System Clock source                    | PLL(HSI)
  48:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  49:src/system_stm32f4xx.c ****   *        SYSCLK(Hz)                             | 168000000
  50:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  51:src/system_stm32f4xx.c ****   *        HCLK(Hz)                               | 168000000
  52:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  53:src/system_stm32f4xx.c ****   *        AHB Prescaler                          | 1
  54:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  55:src/system_stm32f4xx.c ****   *        APB1 Prescaler                         | 4
  56:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  57:src/system_stm32f4xx.c ****   *        APB2 Prescaler                         | 2
  58:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  59:src/system_stm32f4xx.c ****   *        HSE Frequency(Hz)                      | 8000000
  60:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  61:src/system_stm32f4xx.c ****   *        PLL_M                                  | 16
  62:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  63:src/system_stm32f4xx.c ****   *        PLL_N                                  | 336
  64:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  65:src/system_stm32f4xx.c ****   *        PLL_P                                  | 2
  66:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  67:src/system_stm32f4xx.c ****   *        PLL_Q                                  | 7
  68:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  69:src/system_stm32f4xx.c ****   *        PLLI2S_N                               | NA
  70:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  71:src/system_stm32f4xx.c ****   *        PLLI2S_R                               | NA
  72:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  73:src/system_stm32f4xx.c ****   *        I2S input clock                        | NA
  74:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  75:src/system_stm32f4xx.c ****   *        VDD(V)                                 | 3.3
  76:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  77:src/system_stm32f4xx.c ****   *        Main regulator output voltage          | Scale1 mode
  78:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  79:src/system_stm32f4xx.c ****   *        Flash Latency(WS)                      | 5
  80:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  81:src/system_stm32f4xx.c ****   *        Prefetch Buffer                        | OFF
  82:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  83:src/system_stm32f4xx.c ****   *        Instruction cache                      | ON
  84:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  85:src/system_stm32f4xx.c ****   *        Data cache                             | ON
  86:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  87:src/system_stm32f4xx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
  88:src/system_stm32f4xx.c ****   *        SDIO and RNG clock                     |
ARM GAS  /tmp/ccJIue9b.s 			page 3


  89:src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  90:src/system_stm32f4xx.c ****   *=============================================================================
  91:src/system_stm32f4xx.c ****   ****************************************************************************** 
  92:src/system_stm32f4xx.c ****   * @attention
  93:src/system_stm32f4xx.c ****   *
  94:src/system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
  95:src/system_stm32f4xx.c ****   *
  96:src/system_stm32f4xx.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  97:src/system_stm32f4xx.c ****   * You may not use this file except in compliance with the License.
  98:src/system_stm32f4xx.c ****   * You may obtain a copy of the License at:
  99:src/system_stm32f4xx.c ****   *
 100:src/system_stm32f4xx.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 101:src/system_stm32f4xx.c ****   *
 102:src/system_stm32f4xx.c ****   * Unless required by applicable law or agreed to in writing, software 
 103:src/system_stm32f4xx.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 104:src/system_stm32f4xx.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 105:src/system_stm32f4xx.c ****   * See the License for the specific language governing permissions and
 106:src/system_stm32f4xx.c ****   * limitations under the License.
 107:src/system_stm32f4xx.c ****   *
 108:src/system_stm32f4xx.c ****   ******************************************************************************
 109:src/system_stm32f4xx.c ****   */
 110:src/system_stm32f4xx.c **** 
 111:src/system_stm32f4xx.c **** /** @addtogroup CMSIS
 112:src/system_stm32f4xx.c ****   * @{
 113:src/system_stm32f4xx.c ****   */
 114:src/system_stm32f4xx.c **** 
 115:src/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
 116:src/system_stm32f4xx.c ****   * @{
 117:src/system_stm32f4xx.c ****   */  
 118:src/system_stm32f4xx.c ****   
 119:src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
 120:src/system_stm32f4xx.c ****   * @{
 121:src/system_stm32f4xx.c ****   */
 122:src/system_stm32f4xx.c **** 
 123:src/system_stm32f4xx.c **** #include "stm32f4xx.h"
 124:src/system_stm32f4xx.c **** 
 125:src/system_stm32f4xx.c **** /**
 126:src/system_stm32f4xx.c ****   * @}
 127:src/system_stm32f4xx.c ****   */
 128:src/system_stm32f4xx.c **** 
 129:src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
 130:src/system_stm32f4xx.c ****   * @{
 131:src/system_stm32f4xx.c ****   */
 132:src/system_stm32f4xx.c **** 
 133:src/system_stm32f4xx.c **** /**
 134:src/system_stm32f4xx.c ****   * @}
 135:src/system_stm32f4xx.c ****   */
 136:src/system_stm32f4xx.c **** 
 137:src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
 138:src/system_stm32f4xx.c ****   * @{
 139:src/system_stm32f4xx.c ****   */
 140:src/system_stm32f4xx.c **** 
 141:src/system_stm32f4xx.c **** /************************* Miscellaneous Configuration ************************/
 142:src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 143:src/system_stm32f4xx.c ****      on STM324xG_EVAL/STM324x7I_EVAL board as data memory  */
 144:src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
 145:src/system_stm32f4xx.c **** 
ARM GAS  /tmp/ccJIue9b.s 			page 4


 146:src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 147:src/system_stm32f4xx.c ****      Internal SRAM. */
 148:src/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 149:src/system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 150:src/system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
 151:src/system_stm32f4xx.c **** /******************************************************************************/
 152:src/system_stm32f4xx.c **** 
 153:src/system_stm32f4xx.c **** /************************* PLL Parameters *************************************/
 154:src/system_stm32f4xx.c **** /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N */
 155:src/system_stm32f4xx.c **** #define PLL_M      16
 156:src/system_stm32f4xx.c **** #define PLL_N      336
 157:src/system_stm32f4xx.c **** 
 158:src/system_stm32f4xx.c **** /* SYSCLK = PLL_VCO / PLL_P */
 159:src/system_stm32f4xx.c **** #define PLL_P      2
 160:src/system_stm32f4xx.c **** 
 161:src/system_stm32f4xx.c **** /* USB OTG FS, SDIO and RNG Clock =  PLL_VCO / PLLQ */
 162:src/system_stm32f4xx.c **** #define PLL_Q      7
 163:src/system_stm32f4xx.c **** 
 164:src/system_stm32f4xx.c **** /******************************************************************************/
 165:src/system_stm32f4xx.c **** 
 166:src/system_stm32f4xx.c **** /**
 167:src/system_stm32f4xx.c ****   * @}
 168:src/system_stm32f4xx.c ****   */
 169:src/system_stm32f4xx.c **** 
 170:src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 171:src/system_stm32f4xx.c ****   * @{
 172:src/system_stm32f4xx.c ****   */
 173:src/system_stm32f4xx.c **** 
 174:src/system_stm32f4xx.c **** /**
 175:src/system_stm32f4xx.c ****   * @}
 176:src/system_stm32f4xx.c ****   */
 177:src/system_stm32f4xx.c **** 
 178:src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 179:src/system_stm32f4xx.c ****   * @{
 180:src/system_stm32f4xx.c ****   */
 181:src/system_stm32f4xx.c **** 
 182:src/system_stm32f4xx.c ****   uint32_t SystemCoreClock = 168000000;
 183:src/system_stm32f4xx.c **** 
 184:src/system_stm32f4xx.c ****   __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 185:src/system_stm32f4xx.c **** 
 186:src/system_stm32f4xx.c **** /**
 187:src/system_stm32f4xx.c ****   * @}
 188:src/system_stm32f4xx.c ****   */
 189:src/system_stm32f4xx.c **** 
 190:src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 191:src/system_stm32f4xx.c ****   * @{
 192:src/system_stm32f4xx.c ****   */
 193:src/system_stm32f4xx.c **** 
 194:src/system_stm32f4xx.c **** static void SetSysClock(void);
 195:src/system_stm32f4xx.c **** #ifdef DATA_IN_ExtSRAM
 196:src/system_stm32f4xx.c ****   static void SystemInit_ExtMemCtl(void); 
 197:src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM */
 198:src/system_stm32f4xx.c **** 
 199:src/system_stm32f4xx.c **** /**
 200:src/system_stm32f4xx.c ****   * @}
 201:src/system_stm32f4xx.c ****   */
 202:src/system_stm32f4xx.c **** 
ARM GAS  /tmp/ccJIue9b.s 			page 5


 203:src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 204:src/system_stm32f4xx.c ****   * @{
 205:src/system_stm32f4xx.c ****   */
 206:src/system_stm32f4xx.c **** 
 207:src/system_stm32f4xx.c **** /**
 208:src/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 209:src/system_stm32f4xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 210:src/system_stm32f4xx.c ****   *         SystemFrequency variable.
 211:src/system_stm32f4xx.c ****   * @param  None
 212:src/system_stm32f4xx.c ****   * @retval None
 213:src/system_stm32f4xx.c ****   */
 214:src/system_stm32f4xx.c **** void SystemInit(void)
 215:src/system_stm32f4xx.c **** {
 216:src/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 217:src/system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 218:src/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 219:src/system_stm32f4xx.c ****   #endif
 220:src/system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 221:src/system_stm32f4xx.c ****   /* Set HSION bit */
 222:src/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
 223:src/system_stm32f4xx.c **** 
 224:src/system_stm32f4xx.c ****   /* Reset CFGR register */
 225:src/system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
 226:src/system_stm32f4xx.c **** 
 227:src/system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 228:src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 229:src/system_stm32f4xx.c **** 
 230:src/system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 231:src/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
 232:src/system_stm32f4xx.c **** 
 233:src/system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 234:src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 235:src/system_stm32f4xx.c **** 
 236:src/system_stm32f4xx.c ****   /* Disable all interrupts */
 237:src/system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
 238:src/system_stm32f4xx.c **** 
 239:src/system_stm32f4xx.c **** #ifdef DATA_IN_ExtSRAM
 240:src/system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 241:src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM */
 242:src/system_stm32f4xx.c ****          
 243:src/system_stm32f4xx.c ****   /* Configure the System clock source, PLL Multiplier and Divider factors, 
 244:src/system_stm32f4xx.c ****      AHB/APBx prescalers and Flash settings ----------------------------------*/
 245:src/system_stm32f4xx.c ****   SetSysClock();
 246:src/system_stm32f4xx.c **** 
 247:src/system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 248:src/system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 249:src/system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 250:src/system_stm32f4xx.c **** #else
 251:src/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 252:src/system_stm32f4xx.c **** #endif
 253:src/system_stm32f4xx.c **** }
 254:src/system_stm32f4xx.c **** 
 255:src/system_stm32f4xx.c **** /**
 256:src/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 257:src/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 258:src/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 259:src/system_stm32f4xx.c ****   *         other parameters.
ARM GAS  /tmp/ccJIue9b.s 			page 6


 260:src/system_stm32f4xx.c ****   *           
 261:src/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 262:src/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 263:src/system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 264:src/system_stm32f4xx.c ****   *     
 265:src/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 266:src/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 267:src/system_stm32f4xx.c ****   *           constant and the selected clock source:
 268:src/system_stm32f4xx.c ****   *             
 269:src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 270:src/system_stm32f4xx.c ****   *                                              
 271:src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 272:src/system_stm32f4xx.c ****   *                          
 273:src/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 274:src/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 275:src/system_stm32f4xx.c ****   *         
 276:src/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx.h file (default value
 277:src/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 278:src/system_stm32f4xx.c ****   *             in voltage and temperature.   
 279:src/system_stm32f4xx.c ****   *    
 280:src/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx.h file (default value
 281:src/system_stm32f4xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 282:src/system_stm32f4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 283:src/system_stm32f4xx.c ****   *              have wrong result.
 284:src/system_stm32f4xx.c ****   *                
 285:src/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 286:src/system_stm32f4xx.c ****   *           value for HSE crystal.
 287:src/system_stm32f4xx.c ****   *     
 288:src/system_stm32f4xx.c ****   * @param  None
 289:src/system_stm32f4xx.c ****   * @retval None
 290:src/system_stm32f4xx.c ****   */
 291:src/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 292:src/system_stm32f4xx.c **** {
 293:src/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 294:src/system_stm32f4xx.c ****   
 295:src/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 296:src/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 297:src/system_stm32f4xx.c **** 
 298:src/system_stm32f4xx.c ****   switch (tmp)
 299:src/system_stm32f4xx.c ****   {
 300:src/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 301:src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 302:src/system_stm32f4xx.c ****       break;
 303:src/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 304:src/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 305:src/system_stm32f4xx.c ****       break;
 306:src/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 307:src/system_stm32f4xx.c **** 
 308:src/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 309:src/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 310:src/system_stm32f4xx.c ****          */    
 311:src/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 312:src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 313:src/system_stm32f4xx.c ****       
 314:src/system_stm32f4xx.c ****       if (pllsource != 0)
 315:src/system_stm32f4xx.c ****       {
 316:src/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
ARM GAS  /tmp/ccJIue9b.s 			page 7


 317:src/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 318:src/system_stm32f4xx.c ****       }
 319:src/system_stm32f4xx.c ****       else
 320:src/system_stm32f4xx.c ****       {
 321:src/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 322:src/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 323:src/system_stm32f4xx.c ****       }
 324:src/system_stm32f4xx.c **** 
 325:src/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 326:src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 327:src/system_stm32f4xx.c ****       break;
 328:src/system_stm32f4xx.c ****     default:
 329:src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 330:src/system_stm32f4xx.c ****       break;
 331:src/system_stm32f4xx.c ****   }
 332:src/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 333:src/system_stm32f4xx.c ****   /* Get HCLK prescaler */
 334:src/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 335:src/system_stm32f4xx.c ****   /* HCLK frequency */
 336:src/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 337:src/system_stm32f4xx.c **** }
 338:src/system_stm32f4xx.c **** 
 339:src/system_stm32f4xx.c **** /**
 340:src/system_stm32f4xx.c ****   * @brief  Configures the System clock source, PLL Multiplier and Divider factors, 
 341:src/system_stm32f4xx.c ****   *         AHB/APBx prescalers and Flash settings
 342:src/system_stm32f4xx.c ****   * @Note   This function should be called only once the RCC clock configuration  
 343:src/system_stm32f4xx.c ****   *         is reset to the default reset state (done in SystemInit() function).   
 344:src/system_stm32f4xx.c ****   * @param  None
 345:src/system_stm32f4xx.c ****   * @retval None
 346:src/system_stm32f4xx.c ****   */
 347:src/system_stm32f4xx.c **** static void SetSysClock(void)
 348:src/system_stm32f4xx.c **** {
  28              		.loc 1 348 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 349:src/system_stm32f4xx.c **** /******************************************************************************/
 350:src/system_stm32f4xx.c **** /*            PLL (clocked by HSI) used as System clock source                */
 351:src/system_stm32f4xx.c **** /******************************************************************************/
 352:src/system_stm32f4xx.c **** 
 353:src/system_stm32f4xx.c ****   /* At this stage the HSI is already enabled and used as System clock source */
 354:src/system_stm32f4xx.c **** 
 355:src/system_stm32f4xx.c ****     /* Select regulator voltage output Scale 1 mode, System frequency up to 168 MHz */
 356:src/system_stm32f4xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
  33              		.loc 1 356 0
  34 0000 194B     		ldr	r3, .L4
  35 0002 1A6C     		ldr	r2, [r3, #64]
  36 0004 42F08052 		orr	r2, r2, #268435456
  37 0008 1A64     		str	r2, [r3, #64]
 357:src/system_stm32f4xx.c ****     PWR->CR |= PWR_CR_VOS;
  38              		.loc 1 357 0
  39 000a 1849     		ldr	r1, .L4+4
  40 000c 0A68     		ldr	r2, [r1]
  41 000e 42F44042 		orr	r2, r2, #49152
  42 0012 0A60     		str	r2, [r1]
 358:src/system_stm32f4xx.c **** 
ARM GAS  /tmp/ccJIue9b.s 			page 8


 359:src/system_stm32f4xx.c ****   /* HCLK = SYSCLK / 1*/
 360:src/system_stm32f4xx.c ****   RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
  43              		.loc 1 360 0
  44 0014 9A68     		ldr	r2, [r3, #8]
  45 0016 9A60     		str	r2, [r3, #8]
 361:src/system_stm32f4xx.c ****       
 362:src/system_stm32f4xx.c ****   /* PCLK2 = HCLK / 2*/
 363:src/system_stm32f4xx.c ****   RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;
  46              		.loc 1 363 0
  47 0018 9A68     		ldr	r2, [r3, #8]
  48 001a 42F40042 		orr	r2, r2, #32768
  49 001e 9A60     		str	r2, [r3, #8]
 364:src/system_stm32f4xx.c ****     
 365:src/system_stm32f4xx.c ****   /* PCLK1 = HCLK / 1*/
 366:src/system_stm32f4xx.c ****   RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
  50              		.loc 1 366 0
  51 0020 9A68     		ldr	r2, [r3, #8]
  52 0022 42F4A052 		orr	r2, r2, #5120
  53 0026 9A60     		str	r2, [r3, #8]
 367:src/system_stm32f4xx.c **** 
 368:src/system_stm32f4xx.c ****   /* Configure the main PLL */
 369:src/system_stm32f4xx.c ****   RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
  54              		.loc 1 369 0
  55 0028 114A     		ldr	r2, .L4+8
  56 002a 5A60     		str	r2, [r3, #4]
 370:src/system_stm32f4xx.c ****                  (RCC_PLLCFGR_PLLSRC_HSI) | (PLL_Q << 24);
 371:src/system_stm32f4xx.c **** 
 372:src/system_stm32f4xx.c ****   /* Enable the main PLL */
 373:src/system_stm32f4xx.c ****   RCC->CR |= RCC_CR_PLLON;
  57              		.loc 1 373 0
  58 002c 1A68     		ldr	r2, [r3]
  59 002e 42F08072 		orr	r2, r2, #16777216
  60 0032 1A60     		str	r2, [r3]
  61              	.L2:
 374:src/system_stm32f4xx.c **** 
 375:src/system_stm32f4xx.c ****   /* Wait till the main PLL is ready */
 376:src/system_stm32f4xx.c ****   while((RCC->CR & RCC_CR_PLLRDY) == 0)
  62              		.loc 1 376 0 discriminator 1
  63 0034 0C4B     		ldr	r3, .L4
  64 0036 1B68     		ldr	r3, [r3]
  65 0038 13F0007F 		tst	r3, #33554432
  66 003c FAD0     		beq	.L2
 377:src/system_stm32f4xx.c ****   {
 378:src/system_stm32f4xx.c ****   }
 379:src/system_stm32f4xx.c ****    
 380:src/system_stm32f4xx.c ****   /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
 381:src/system_stm32f4xx.c ****   FLASH->ACR = FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;
  67              		.loc 1 381 0
  68 003e 40F20562 		movw	r2, #1541
  69 0042 0C4B     		ldr	r3, .L4+12
  70 0044 1A60     		str	r2, [r3]
 382:src/system_stm32f4xx.c **** 
 383:src/system_stm32f4xx.c ****   /* Select the main PLL as system clock source */
 384:src/system_stm32f4xx.c ****   RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
  71              		.loc 1 384 0
  72 0046 A3F58063 		sub	r3, r3, #1024
  73 004a 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/ccJIue9b.s 			page 9


  74 004c 22F00302 		bic	r2, r2, #3
  75 0050 9A60     		str	r2, [r3, #8]
 385:src/system_stm32f4xx.c ****   RCC->CFGR |= RCC_CFGR_SW_PLL;
  76              		.loc 1 385 0
  77 0052 9A68     		ldr	r2, [r3, #8]
  78 0054 42F00202 		orr	r2, r2, #2
  79 0058 9A60     		str	r2, [r3, #8]
  80              	.L3:
 386:src/system_stm32f4xx.c **** 
 387:src/system_stm32f4xx.c ****   /* Wait till the main PLL is used as system clock source */
 388:src/system_stm32f4xx.c ****   while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
  81              		.loc 1 388 0 discriminator 1
  82 005a 034B     		ldr	r3, .L4
  83 005c 9B68     		ldr	r3, [r3, #8]
  84 005e 03F00C03 		and	r3, r3, #12
  85 0062 082B     		cmp	r3, #8
  86 0064 F9D1     		bne	.L3
 389:src/system_stm32f4xx.c ****   {
 390:src/system_stm32f4xx.c ****   }
 391:src/system_stm32f4xx.c **** }
  87              		.loc 1 391 0
  88 0066 7047     		bx	lr
  89              	.L5:
  90              		.align	2
  91              	.L4:
  92 0068 00380240 		.word	1073887232
  93 006c 00700040 		.word	1073770496
  94 0070 10540007 		.word	117462032
  95 0074 003C0240 		.word	1073888256
  96              		.cfi_endproc
  97              	.LFE125:
  99              		.section	.text.SystemInit,"ax",%progbits
 100              		.align	2
 101              		.global	SystemInit
 102              		.thumb
 103              		.thumb_func
 105              	SystemInit:
 106              	.LFB123:
 215:src/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 107              		.loc 1 215 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111 0000 10B5     		push	{r4, lr}
 112              	.LCFI0:
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 4, -8
 115              		.cfi_offset 14, -4
 218:src/system_stm32f4xx.c ****   #endif
 116              		.loc 1 218 0
 117 0002 104C     		ldr	r4, .L8
 118 0004 D4F88830 		ldr	r3, [r4, #136]
 119 0008 43F47003 		orr	r3, r3, #15728640
 120 000c C4F88830 		str	r3, [r4, #136]
 222:src/system_stm32f4xx.c **** 
 121              		.loc 1 222 0
 122 0010 0D4B     		ldr	r3, .L8+4
ARM GAS  /tmp/ccJIue9b.s 			page 10


 123 0012 1A68     		ldr	r2, [r3]
 124 0014 42F00102 		orr	r2, r2, #1
 125 0018 1A60     		str	r2, [r3]
 225:src/system_stm32f4xx.c **** 
 126              		.loc 1 225 0
 127 001a 0021     		movs	r1, #0
 128 001c 9960     		str	r1, [r3, #8]
 228:src/system_stm32f4xx.c **** 
 129              		.loc 1 228 0
 130 001e 1A68     		ldr	r2, [r3]
 131 0020 22F08472 		bic	r2, r2, #17301504
 132 0024 22F48032 		bic	r2, r2, #65536
 133 0028 1A60     		str	r2, [r3]
 231:src/system_stm32f4xx.c **** 
 134              		.loc 1 231 0
 135 002a 084A     		ldr	r2, .L8+8
 136 002c 5A60     		str	r2, [r3, #4]
 234:src/system_stm32f4xx.c **** 
 137              		.loc 1 234 0
 138 002e 1A68     		ldr	r2, [r3]
 139 0030 22F48022 		bic	r2, r2, #262144
 140 0034 1A60     		str	r2, [r3]
 237:src/system_stm32f4xx.c **** 
 141              		.loc 1 237 0
 142 0036 D960     		str	r1, [r3, #12]
 245:src/system_stm32f4xx.c **** 
 143              		.loc 1 245 0
 144 0038 FFF7FEFF 		bl	SetSysClock
 145              	.LVL0:
 251:src/system_stm32f4xx.c **** #endif
 146              		.loc 1 251 0
 147 003c 4FF00063 		mov	r3, #134217728
 148 0040 A360     		str	r3, [r4, #8]
 149 0042 10BD     		pop	{r4, pc}
 150              	.L9:
 151              		.align	2
 152              	.L8:
 153 0044 00ED00E0 		.word	-536810240
 154 0048 00380240 		.word	1073887232
 155 004c 10300024 		.word	603992080
 156              		.cfi_endproc
 157              	.LFE123:
 159              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 160              		.align	2
 161              		.global	SystemCoreClockUpdate
 162              		.thumb
 163              		.thumb_func
 165              	SystemCoreClockUpdate:
 166              	.LFB124:
 292:src/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 167              		.loc 1 292 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL1:
 296:src/system_stm32f4xx.c **** 
ARM GAS  /tmp/ccJIue9b.s 			page 11


 173              		.loc 1 296 0
 174 0000 234B     		ldr	r3, .L19
 175 0002 9B68     		ldr	r3, [r3, #8]
 176 0004 03F00C03 		and	r3, r3, #12
 177              	.LVL2:
 298:src/system_stm32f4xx.c ****   {
 178              		.loc 1 298 0
 179 0008 042B     		cmp	r3, #4
 180 000a 07D0     		beq	.L12
 181 000c 082B     		cmp	r3, #8
 182 000e 09D0     		beq	.L13
 183 0010 002B     		cmp	r3, #0
 184 0012 2DD1     		bne	.L18
 301:src/system_stm32f4xx.c ****       break;
 185              		.loc 1 301 0
 186 0014 1F4A     		ldr	r2, .L19+4
 187 0016 204B     		ldr	r3, .L19+8
 188              	.LVL3:
 189 0018 1A60     		str	r2, [r3]
 302:src/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 190              		.loc 1 302 0
 191 001a 2CE0     		b	.L15
 192              	.LVL4:
 193              	.L12:
 304:src/system_stm32f4xx.c ****       break;
 194              		.loc 1 304 0
 195 001c 1F4A     		ldr	r2, .L19+12
 196 001e 1E4B     		ldr	r3, .L19+8
 197              	.LVL5:
 198 0020 1A60     		str	r2, [r3]
 305:src/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 199              		.loc 1 305 0
 200 0022 28E0     		b	.L15
 201              	.LVL6:
 202              	.L13:
 311:src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 203              		.loc 1 311 0
 204 0024 1A4B     		ldr	r3, .L19
 205              	.LVL7:
 206 0026 5A68     		ldr	r2, [r3, #4]
 207              	.LVL8:
 312:src/system_stm32f4xx.c ****       
 208              		.loc 1 312 0
 209 0028 5B68     		ldr	r3, [r3, #4]
 210 002a 03F03F03 		and	r3, r3, #63
 211              	.LVL9:
 314:src/system_stm32f4xx.c ****       {
 212              		.loc 1 314 0
 213 002e 12F4800F 		tst	r2, #4194304
 214 0032 09D0     		beq	.L16
 317:src/system_stm32f4xx.c ****       }
 215              		.loc 1 317 0
 216 0034 194A     		ldr	r2, .L19+12
 217              	.LVL10:
 218 0036 B2FBF3F2 		udiv	r2, r2, r3
 219 003a 154B     		ldr	r3, .L19
 220              	.LVL11:
ARM GAS  /tmp/ccJIue9b.s 			page 12


 221 003c 5B68     		ldr	r3, [r3, #4]
 222 003e C3F38813 		ubfx	r3, r3, #6, #9
 223 0042 03FB02F2 		mul	r2, r3, r2
 224              	.LVL12:
 225 0046 08E0     		b	.L17
 226              	.LVL13:
 227              	.L16:
 322:src/system_stm32f4xx.c ****       }
 228              		.loc 1 322 0
 229 0048 124A     		ldr	r2, .L19+4
 230              	.LVL14:
 231 004a B2FBF3F3 		udiv	r3, r2, r3
 232              	.LVL15:
 233 004e 104A     		ldr	r2, .L19
 234 0050 5168     		ldr	r1, [r2, #4]
 235 0052 C1F38811 		ubfx	r1, r1, #6, #9
 236 0056 01FB03F2 		mul	r2, r1, r3
 237              	.LVL16:
 238              	.L17:
 325:src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 239              		.loc 1 325 0
 240 005a 0D4B     		ldr	r3, .L19
 241 005c 5B68     		ldr	r3, [r3, #4]
 242 005e C3F30143 		ubfx	r3, r3, #16, #2
 243 0062 0133     		adds	r3, r3, #1
 244 0064 5B00     		lsls	r3, r3, #1
 245              	.LVL17:
 326:src/system_stm32f4xx.c ****       break;
 246              		.loc 1 326 0
 247 0066 B2FBF3F3 		udiv	r3, r2, r3
 248              	.LVL18:
 249 006a 0B4A     		ldr	r2, .L19+8
 250              	.LVL19:
 251 006c 1360     		str	r3, [r2]
 327:src/system_stm32f4xx.c ****     default:
 252              		.loc 1 327 0
 253 006e 02E0     		b	.L15
 254              	.LVL20:
 255              	.L18:
 329:src/system_stm32f4xx.c ****       break;
 256              		.loc 1 329 0
 257 0070 084A     		ldr	r2, .L19+4
 258 0072 094B     		ldr	r3, .L19+8
 259              	.LVL21:
 260 0074 1A60     		str	r2, [r3]
 261              	.LVL22:
 262              	.L15:
 334:src/system_stm32f4xx.c ****   /* HCLK frequency */
 263              		.loc 1 334 0
 264 0076 064B     		ldr	r3, .L19
 265 0078 9B68     		ldr	r3, [r3, #8]
 266 007a C3F30313 		ubfx	r3, r3, #4, #4
 267 007e 084A     		ldr	r2, .L19+16
 268 0080 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 269 0082 D2B2     		uxtb	r2, r2
 270              	.LVL23:
 336:src/system_stm32f4xx.c **** }
ARM GAS  /tmp/ccJIue9b.s 			page 13


 271              		.loc 1 336 0
 272 0084 0449     		ldr	r1, .L19+8
 273 0086 0B68     		ldr	r3, [r1]
 274 0088 D340     		lsrs	r3, r3, r2
 275 008a 0B60     		str	r3, [r1]
 276 008c 7047     		bx	lr
 277              	.L20:
 278 008e 00BF     		.align	2
 279              	.L19:
 280 0090 00380240 		.word	1073887232
 281 0094 0024F400 		.word	16000000
 282 0098 00000000 		.word	.LANCHOR0
 283 009c 00127A00 		.word	8000000
 284 00a0 00000000 		.word	.LANCHOR1
 285              		.cfi_endproc
 286              	.LFE124:
 288              		.global	AHBPrescTable
 289              		.global	SystemCoreClock
 290              		.section	.data.AHBPrescTable,"aw",%progbits
 291              		.align	2
 292              		.set	.LANCHOR1,. + 0
 295              	AHBPrescTable:
 296 0000 00       		.byte	0
 297 0001 00       		.byte	0
 298 0002 00       		.byte	0
 299 0003 00       		.byte	0
 300 0004 00       		.byte	0
 301 0005 00       		.byte	0
 302 0006 00       		.byte	0
 303 0007 00       		.byte	0
 304 0008 01       		.byte	1
 305 0009 02       		.byte	2
 306 000a 03       		.byte	3
 307 000b 04       		.byte	4
 308 000c 06       		.byte	6
 309 000d 07       		.byte	7
 310 000e 08       		.byte	8
 311 000f 09       		.byte	9
 312              		.section	.data.SystemCoreClock,"aw",%progbits
 313              		.align	2
 314              		.set	.LANCHOR0,. + 0
 317              	SystemCoreClock:
 318 0000 007A030A 		.word	168000000
 319              		.text
 320              	.Letext0:
 321              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 322              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 323              		.file 4 "/data/repos/stm32/STM32F4xx_DSP_StdPeriph_Lib_V1.8.0/Libraries/CMSIS/Include/core_cm4.h"
 324              		.file 5 "/data/repos/stm32/STM32F4xx_DSP_StdPeriph_Lib_V1.8.0/Libraries/CMSIS/Device/ST/STM32F4xx/
ARM GAS  /tmp/ccJIue9b.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f4xx.c
     /tmp/ccJIue9b.s:21     .text.SetSysClock:0000000000000000 $t
     /tmp/ccJIue9b.s:25     .text.SetSysClock:0000000000000000 SetSysClock
     /tmp/ccJIue9b.s:92     .text.SetSysClock:0000000000000068 $d
     /tmp/ccJIue9b.s:100    .text.SystemInit:0000000000000000 $t
     /tmp/ccJIue9b.s:105    .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccJIue9b.s:153    .text.SystemInit:0000000000000044 $d
     /tmp/ccJIue9b.s:160    .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccJIue9b.s:165    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccJIue9b.s:280    .text.SystemCoreClockUpdate:0000000000000090 $d
     /tmp/ccJIue9b.s:295    .data.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/ccJIue9b.s:317    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccJIue9b.s:291    .data.AHBPrescTable:0000000000000000 $d
     /tmp/ccJIue9b.s:313    .data.SystemCoreClock:0000000000000000 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.ada664092ec687a6ddfd94a20249b16a
                           .group:0000000000000000 wm4.stm32f4xx.h.54.1a026671df242b45edd4a2d9a385d790
                           .group:0000000000000000 wm4.core_cm4.h.43.f75e2f71b2e33f7a3db429cd8b0cae9e
                           .group:0000000000000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:0000000000000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:0000000000000000 wm4._intsup.h.10.35a45952db64d30146faa63a55c20c1c
                           .group:0000000000000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.core_cmInstr.h.39.addda81f1f3453ba31dd54fc5b6fcee8
                           .group:0000000000000000 wm4.core_cmSimd.h.43.c355993beb49ccd10586af5b1cfe5aee
                           .group:0000000000000000 wm4.core_cm4.h.201.38b66ea2c12d55e26a2374d5521b1bde
                           .group:0000000000000000 wm4.stm32f4xx.h.860.dd64398f46e57985bc86e7cf18ec326f
                           .group:0000000000000000 wm4.stm32f4xx_adc.h.108.50f89bb433cbd21c5f52bf8ae55d6c79
                           .group:0000000000000000 wm4.stm32f4xx_dbgmcu.h.30.70a81ec54c2707baa9fca77391eeeaaa
                           .group:0000000000000000 wm4.stm32f4xx_dma.h.31.52d961de9ff5e60f8cab69f316bc8a32
                           .group:0000000000000000 wm4.stm32f4xx_exti.h.31.f8872db4c73f614dc5467052eb869767
                           .group:0000000000000000 wm4.stm32f4xx_flash.h.31.512b7e2e7cffed751a2b115a66cd19e7
                           .group:0000000000000000 wm4.stm32f4xx_gpio.h.31.cff4b1f81e3b7649bb4707460a69576c
                           .group:0000000000000000 wm4.stm32f4xx_i2c.h.31.5da502b7dbdc7954711b9d802187d4c5
                           .group:0000000000000000 wm4.stm32f4xx_iwdg.h.31.30e376e6d8d424aab7fddd66cf691c7b
                           .group:0000000000000000 wm4.stm32f4xx_pwr.h.31.04b4e0b17d0825b81e6ed8e26b1c800c
                           .group:0000000000000000 wm4.stm32f4xx_rcc.h.30.19b8705d51b04ca220e05988d22690a2
                           .group:0000000000000000 wm4.stm32f4xx_rtc.h.31.d619c8d8c416bda4a72c155ca8d281aa
                           .group:0000000000000000 wm4.stm32f4xx_sdio.h.31.167ce011aeec136e7d6a903a0171b853
                           .group:0000000000000000 wm4.stm32f4xx_spi.h.31.8e833b3876fd453f4e9bfcc8fa53481f
                           .group:0000000000000000 wm4.stm32f4xx_syscfg.h.31.25e8216f4b89fd14fb4f9412c2c75af0
                           .group:0000000000000000 wm4.stm32f4xx_tim.h.31.b1d608fbde729347e4ccf70799e654d2
                           .group:0000000000000000 wm4.stm32f4xx_usart.h.31.3e1c4e996b3922a213c99d3add6ff29c
                           .group:0000000000000000 wm4.stm32f4xx_wwdg.h.31.b45a80fa1ec64984adf786f7e489f31b
                           .group:0000000000000000 wm4.misc.h.31.041217492a6cb86f2fb26099f373a465
                           .group:0000000000000000 wm4.stm32f4xx_cryp.h.31.1d2f959bcf858c5bd429e33a885bdda2
                           .group:0000000000000000 wm4.stm32f4xx_hash.h.31.b42694b6f39376d2a170b53244af1aaa
                           .group:0000000000000000 wm4.stm32f4xx_rng.h.31.1ec493d56b7a8e5a71238519cae6dea7
                           .group:0000000000000000 wm4.stm32f4xx_can.h.31.d0537057b3ecc126d0cceacbbc9cdc27
                           .group:0000000000000000 wm4.stm32f4xx_dac.h.31.b8d45e7eaf71ee4bf01c1317dbc06f77
                           .group:0000000000000000 wm4.stm32f4xx_dcmi.h.30.9d0942d58c357d2eed15e044bf9b4a77
                           .group:0000000000000000 wm4.stm32f4xx_fsmc.h.31.ff58629e0c603fb2f9b3f00c0657fdfa
                           .group:0000000000000000 wm4.stm32f4xx.h.12034.dfbce5ca84da4032c98cb9d89dddb98c

NO UNDEFINED SYMBOLS
